"文字コードをutf-8
set fenc=utf-8

"ヤンクをクリップボードに保存
set clipboard+=unnamed
"mouse 使用
set mouse=a
"jj back
inoremap <silent> jj <ESC>

"行番号を表示
set number
"help 日本語化
set helplang=ja
"音殺す
set belloff=all
"色系
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"コメントの色変更
highlight Comment ctermfg=LightBlue
"文字列の色を変えたい
highlight String ctermfg=LightCyan
"数字の色を変える
highlight Number ctermfg=DarkCyan
"入力補助
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"ペア括弧を表示する
set showmatch
set expandtab
"backup swap 移動
set backupdir=$HOME/.vim-backup/backup
set directory=$HOME/.vim-backup/temp
" タブ文字の表示幅
set tabstop=3
" Vimが挿入するインデントの幅
set shiftwidth=3
" 行頭の余白内で Tab を打ち込むと、'shiftwidth' の数だけインデントする
set smarttab
" 改行時に前の行のインデントを継続する
set autoindent
" 改行時に入力された行の末尾に合わせて次の行のインデントを増減する
set smartindent
"括弧補完
inoremap { {}<LEFT>
inoremap ( ()<LEFT>
inoremap [ []<LEFT>
inoremap " ""<LEFT>
inoremap ' ''<LEFT>
" Turn off paste mode when leaving insert ノーマルモードになったらpaste modeを解除する
autocmd InsertLeave * set nopaste
"ファイル名を表示
set title
"F2でvimrc
nnoremap <silent> <F2> :tabnew $MYVIMRC<CR>
"html補完test
autocmd BufNewFile *.html 0r $HOME/.vim/template/template.html
""<F5>gcc
""function! Run()
""   :w
""   :!gcc % -o %:r
""   :!./%:r
""endfunction
""command! Gcc call Run()
""nnoremap <F5> :Gcc<CR><CR>


" File type detection is On.
filetype on

augroup vimrc
    " Remove all autocommands in this group
    autocmd!

    " <F5> key execution
    nnoremap <F5> :w<CR>
    autocmd FileType java        nmap <buffer> <F5> :!javac -encoding UTF-8 % && java %<<CR>
    autocmd FileType javascript  nmap <buffer> <F5> :!node %<CR>
    autocmd FileType php         nmap <buffer> <F5> :!php %<CR>
    autocmd FileType python      nmap <buffer> <F5> :!python %<CR>
    autocmd FileType ruby        nmap <buffer> <F5> :!ruby %<CR>
    autocmd FileType go          nmap <buffer> <F5> :!go run %<CR>
    autocmd FileType groovy      nmap <buffer> <F5> :!groovy %<CR>
    autocmd FileType vim         nmap <buffer> <F5> :source %<CR>
    autocmd FileType c           nmap <buffer> <F5> :!gcc % -o %:r&&./%:r<CR>
    autocmd FileType cpp         nmap <buffer> <F5> :!g++% -o %:r&&./%:r<CR>

augroup END
"Vundle
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
"coc.nvim 補完プラグインycmと競合の可能性あり
"Plugin 'neoclide/coc.nvim'
" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}
"YouCompleteMe
Plugin 'ycm-core/YouCompleteMe'
"vimdoc-ja 日本語help
Plugin 'vim-jp/vimdoc-ja'
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
let g:ycm_global_ycm_extra_conf = '${HOME}/.ycm_extra_conf.py'
let g:ycm_auto_trigger = 1
let g:ycm_min_num_of_chars_for_completion = 2
let g:ycm_autoclose_preview_window_after_insertion = 1
set splitbelow
